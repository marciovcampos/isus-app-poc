'use strict';

var _riteway = require('riteway');

var _cheerio = require('cheerio');

var _cheerio2 = _interopRequireDefault(_cheerio);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _server = require('react-dom/server');

var _server2 = _interopRequireDefault(_server);

var _context2 = require('./context');

var _useFeatures = require('./use-features');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

var render = _server2.default.renderToStaticMarkup;

(0, _riteway.describe)('useFeatures()', function () {
  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(assert) {
    var TestComponentWithHook, features, $, _TestComponentWithHook, _features, _$;

    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            TestComponentWithHook = function TestComponentWithHook() {
              var features = (0, _useFeatures.useFeatures)();
              return _react2.default.createElement('div', { className: features.includes('foo') ? 'flag-on' : 'flag-off' });
            };

            features = ['foo', 'bar', 'baz'];
            $ = _cheerio2.default.load(render(_react2.default.createElement(
              _context2.Provider,
              { value: features },
              _react2.default.createElement(TestComponentWithHook, null)
            )));


            assert({
              given: 'the feature is disabled and a hooked component',
              should: 'render the flag enabled component',
              actual: $('.flag-on').length,
              expected: 1
            });

            assert({
              given: 'the feature is enabled and a hooked component',
              should: 'not render the flag disabled component',
              actual: $('.flag-off').length,
              expected: 0
            });

            _TestComponentWithHook = function _TestComponentWithHook() {
              var features = (0, _useFeatures.useFeatures)();
              return _react2.default.createElement('div', { className: features.includes('foo') ? 'flag-on' : 'flag-off' });
            };

            _features = ['not-foo', 'bar', 'baz'];
            _$ = _cheerio2.default.load(render(_react2.default.createElement(
              _context2.Provider,
              { value: _features },
              _react2.default.createElement(_TestComponentWithHook, null)
            )));


            assert({
              given: 'the feature is disabled and a hooked component',
              should: 'not render the flag enabled component',
              actual: _$('.flag-on').length,
              expected: 0
            });

            assert({
              given: 'the feature is enabled and a hooked component',
              should: 'render the flag disabled component',
              actual: _$('.flag-off').length,
              expected: 1
            });

          case 10:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, undefined);
  }));

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}());